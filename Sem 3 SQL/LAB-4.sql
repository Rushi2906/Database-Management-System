--• Stored Procedures

--1. All tables Insert, Update & Delete
--INSERT
	--Department
		CREATE PROC PR_DEPARTMENT_INSERT
			@DEPARTMENTID	INT,
			@DEPARTMENTNAME VARCHAR(100)
		AS
		BEGIN
			INSERT INTO DEPARTMENT VALUES
			(@DEPARTMENTID,	
			 @DEPARTMENTNAME)
		END

		EXEC PR_DEPARTMENT_INSERT 1,'ADMIN'
		EXEC PR_DEPARTMENT_INSERT 2,'IT'
		EXEC PR_DEPARTMENT_INSERT 3,'HR'
		EXEC PR_DEPARTMENT_INSERT 4,'ACCOUNT'

		SELECT * FROM DEPARTMENT

	--DESIGNATION 
		CREATE PROC PR_DESIGNATION_INSERT
			@DESIGNATIONID		INT,
			@DESIGNATIONNAME	VARCHAR(100)
		AS
		BEGIN
			INSERT INTO DESIGNATION VALUES
			(@DESIGNATIONID,	
			 @DESIGNATIONNAME)
		END

		EXEC PR_DESIGNATION_INSERT 11,'JOBBER'
		EXEC PR_DESIGNATION_INSERT 12,'WELDER'
		EXEC PR_DESIGNATION_INSERT 13,'CLERK'
		EXEC PR_DESIGNATION_INSERT 14,'MANAGER'
		EXEC PR_DESIGNATION_INSERT 15,'CEO'

		SELECT * FROM DESIGNATION

	--Person 
		Create Proc PR_Person_Insert
			@FirstName		varchar(100),
			@LastName		varchar(100),
			@Salary			Decimal(8,2),
			@JoiningDate	Datetime,
			@DepartmentID	int,
			@DesignationID	int
		AS
		Begin
			INSERT INTO PERSON VALUES
			(@FirstName,		
			 @LastName,	
			 @Salary,		
			 @JoiningDate,
			 @DepartmentID,
			 @DesignationID)
		END	

		EXEC PR_Person_Insert 'RAHUL','ANSHU',56000,'1990-01-01',1,12
		EXEC PR_Person_Insert 'HARDIK','HINSU',18000,'1990-09-25',2,11
		EXEC PR_Person_Insert 'BHAVIN','KAMANI',25000,'1991-05-14',NULL,11
		EXEC PR_Person_Insert 'BHOOMI','PATEL',39000,'2014-02-20',1,13
		EXEC PR_Person_Insert 'ROHIT','RAJGOR',17000,'1990-07-23',2,15
		EXEC PR_Person_Insert 'PRIYA','MEHTA',25000,'1990-10-18',2,NULL
		EXEC PR_Person_Insert 'NEHA','TRIVEDI',18000,'2014-02-20',3,15

		SELECT * FROM PERSON
			
--UPDATE
	--PERSON
		CREATE PROC PR_PERSON_UPDATE
			@WORKERID INT,
			@SALARY   DECIMAL(8,2)
		AS
		BEGIN
			UPDATE PERSON
			SET SALARY=@SALARY
			WHERE WORKERID=@WORKERID
		END 
		
		EXEC PR_PERSON_UPDATE 105,20000
		SELECT * FROM PERSON

	--DEPARTMENT
		CREATE PROC PR_DEPARTMENT_UPDATE
			@DEPARTMENTID	INT,
			@DEPARTMENTNAME VARCHAR(100)
		AS
		BEGIN
			UPDATE DEPARTMENT
			SET DEPARTMENTNAME=@DEPARTMENTNAME
			WHERE DEPARTMENTID=@DEPARTMENTID
		END
		
		EXEC PR_DEPARTMENT_UPDATE 1,'ADMIN1'
		SELECT * FROM DEPARTMENT

	--DESIGNATION
		CREATE PROC PR_DESIGNATION_UPDATE
			@DESIGNATIONID	 INT,
			@DESIGNATIONNAME VARCHAR(100)
		AS
		BEGIN
			UPDATE DESIGNATION
			SET DESIGNATIONNAME=@DESIGNATIONNAME
			WHERE DESIGNATIONID=@DESIGNATIONID
		END
		
		EXEC PR_DESIGNATION_UPDATE 11,'JOBBER1'
		SELECT * FROM DESIGNATION

--DELETE
	--PERSON
		CREATE PROC PR_PERSON_DELETE
			@WORKERID	INT
		AS
		BEGIN
			DELETE FROM PERSON 
			WHERE WORKERID=@WORKERID
		END

		EXEC PR_PERSON_DELETE 106
		SELECT * FROM PERSON

	--DEPARTMENT
		CREATE PROC PR_DEPARTMENT_DELETE
			@DEPARTMENTID	INT
		AS
		BEGIN
			DELETE FROM DEPARTMENT 
			WHERE DEPARTMENTID=@DEPARTMENTID
		END

		EXEC PR_DEPARTMENT_DELETE 4
		SELECT * FROM DEPARTMENT

	--DESIGNATION
		CREATE PROC PR_DESIGNATION_DELETE
			@DESIGNATIONID	INT
		AS
		BEGIN
			DELETE FROM DESIGNATION 
			WHERE DESIGNATIONID=@DESIGNATIONID
		END

		EXEC PR_DESIGNATION_DELETE 14
		SELECT * FROM DESIGNATION
--2. All tables SelectAll (If foreign key is available than do write join and take columns on select list)
	--PERSON
		ALTER PROC PR_PERSON_SELECTALL
		AS
		BEGIN
			SELECT PERSON.WORKERID,
				   PERSON.FIRSTNAME,
				   PERSON.LASTNAME,
				   PERSON.SALARY,
				   PERSON.JOININGDATE,
				   DEPARTMENT.DEPARTMENTNAME,
				   DESIGNATION.DESIGNATIONNAME
			FROM PERSON LEFT OUTER JOIN DEPARTMENT 
			ON PERSON.DEPARTMENTID=DEPARTMENT.DEPARTMENTID
			LEFT OUTER JOIN DESIGNATION 
			ON PERSON.DESIGNATIONID=DESIGNATION.DESIGNATIONID	 
		END
		
		EXEC PR_PERSON_SELECTALL

	--DEPARTMENT
		CREATE PROC PR_DEPARTMENT_SELECTALL
		AS
		BEGIN
			SELECT DEPARTMENTID,DEPARTMENTNAME FROM DEPARTMENT
		END

		EXEC PR_DEPARTMENT_SELECTALL

	--DESIGNATION
		CREATE PROC PR_DESIGNATION_SELECTALL
		AS
		BEGIN
			SELECT DESIGNATIONID,DESIGNATIONNAME FROM DESIGNATION
		END
		
		EXEC PR_DESIGNATION_SELECTALL
--3. All tables SelectPK
	--PERSON
		CREATE PROC PR_PERSON_SELECTPK
			@WORKERID	INT
		AS
		BEGIN
			SELECT * FROM PERSON
			WHERE WORKERID=@WORKERID
		END

		EXEC PR_PERSON_SELECTPK 101

	--DEPARTMENT
		CREATE PROC PR_DEPARTMENT_SELECTPK
			@DEPARTMENTID	INT
		AS
		BEGIN
			SELECT * FROM DEPARTMENT
			WHERE DEPARTMENTID=@DEPARTMENTID
		END

		EXEC PR_DEPARTMENT_SELECTPK 1

	--DESIGNATION
		CREATE PROC PR_DESIGNATION_SELECTPK
			@DESIGNATIONID	INT
		AS
		BEGIN
			SELECT * FROM DESIGNATION
			WHERE DESIGNATIONID=@DESIGNATIONID
		END

		EXEC PR_DESIGNATION_SELECTPK 11
--4. Create Procedure that takes Department Name & Designation Name as Input and Returns a 
--table with Worker’s First Name, Salary, Joining Date & Department Name.
	ALTER PROC PR_PERSON_RETURNTABLE
		@DEPARTMENTNAME		VARCHAR(100),
		@DESIGNATIONNAME	VARCHAR(100)
	AS
	BEGIN
		SELECT P.FIRSTNAME,P.SALARY,P.JOININGDATE,D.DEPARTMENTNAME
		FROM PERSON P LEFT OUTER JOIN DEPARTMENT D
		ON P.DEPARTMENTID=D.DEPARTMENTID 
		LEFT OUTER JOIN DESIGNATION DE
		ON P.DESIGNATIONID=DE.DESIGNATIONID
		WHERE D.DEPARTMENTNAME=@DEPARTMENTNAME AND DE.DESIGNATIONNAME=@DESIGNATIONNAME
	END

	EXEC PR_PERSON_RETURNTABLE 'ADMIN1','WELDER'
--5. Create Procedure that takes FirstName as an input parameter and displays’ all the details of 
--the worker with their department & designation name.
	ALTER PROC PR_PERSON_BYFIRSTNAME
		@FIRSTNAME	VARCHAR(100)
	AS
	BEGIN
		SELECT P.WORKERID,P.FIRSTNAME,P.LASTNAME,P.SALARY,P.JOININGDATE,D.DEPARTMENTNAME,DE.DESIGNATIONNAME
		FROM PERSON P LEFT OUTER JOIN Department D
		ON P.DepartmentID=D.DepartmentID LEFT OUTER JOIN DESIGNATION DE
		ON P.DESIGNATIONID=DE.DesignationID
		WHERE FIRSTNAME=@FIRSTNAME
	END

	EXEC PR_PERSON_BYFIRSTNAME RAHUL

--6. Create Procedure which displays department wise maximum, minimum & total salaries.
	CREATE PROC PR_PRSON_MAXMINAVGSALARY
	AS
	BEGIN
		SELECT D.DEPARTMENTNAME,MAX(SALARY) AS MAX,MIN(SALARY) AS MIN,SUM(SALARY) AS SUM
		FROM PERSON P INNER JOIN Department D
		ON P.DepartmentID=D.DepartmentID
		GROUP BY D.DepartmentName
	END

	EXEC PR_PRSON_MAXMINAVGSALARY

-------------------------------------------VIEWS-------------------------------------------

--1. Create a view that display first 100 workers details.
	CREATE VIEW VW_PERSON_WORKERDETAIL
	AS
		SELECT TOP 100 * FROM PERSON

	SELECT * FROM VW_PERSON_WORKERDETAIL
--2. Create a view that displays designation wise maximum, minimum & total salaries.
	CREATE VIEW VW_PERSON_DESIGWISEMAXMIN
	AS
	SELECT DE.DESIGNATIONNAME,MAX(SALARY) AS MAX,MIN(SALARY) AS SALARY,SUM(SALARY) AS SALARY
	FROM PERSON P INNER JOIN Designation DE
	ON P.DesignationID=DE.DesignationID
	GROUP BY DesignationName

	SELECT * FROM VW_PERSON_DESIGWISEMAXMIN

--3. Create a view that displays Worker’s first name with their salaries & joining date, it also displays 
--duration column which is difference of joining date with respect to current date.
	ALTER VIEW VW_PERSON_DURATION
	AS
	SELECT FIRSTNAME,SALARY,JOININGDATE,DATEDIFF(YEAR,JOININGDATE,GETDATE()) AS DATEDIFFERENCE
	FROM PERSON

	SELECT * FROM VW_PERSON_DURATION
--4. Create a view which shows department & designation wise total number of workers.
	ALTER VIEW VW_PERSON_COUNT
	AS
	SELECT D.DEPARTMENTNAME,DE.DesignationName,COUNT(P.WORKERID) AS COUNTWORKER
	FROM PERSON P LEFT OUTER JOIN Department D
	ON P.DepartmentID=D.DepartmentID LEFT OUTER JOIN Designation DE ON P.DesignationID=DE.DesignationID
	GROUP BY DepartmentName,DesignationName

	SELECT * FROM VW_PERSON_COUNT

	SELECT * FROM PERSON
--5. Create a view that displays worker names who don’t have either in any department or 
--designation.

	CREATE VIEW VW_PERSON_DISPLAYNAME
	AS
	SELECT FIRSTNAME FROM PERSON
	WHERE DepartmentID IS NULL OR DesignationID IS NULL

	SELECT * FROM VW_PERSON_DISPLAYNAME

-------------------------------------FUNCTION---------------------------------------------------

--1. Create a table valued function which accepts DepartmentID as a parameter & returns a worker
--table based on DepartmentID.
	CREATE FUNCTION ACCEPTDEPARTMENT
	(
		@DEPARTMENTID INT
	)
	RETURNS TABLE
	AS
	RETURN(
		SELECT * FROM PERSON
		WHERE DepartmentID=@DEPARTMENTID
	)
		
		SELECT * FROM ACCEPTDEPARTMENT(1)		

--3. Create a scalar valued function which accepts two parameters start date & end date, and
--returns a date difference in days.
	alter FUNCTION ACCEPTSTARTENDDATE(@STARTDATE DATE,@ENDDATE date)
	RETURNS INT
	AS
	BEGIN
		RETURN DATEDIFF(DAY,@STARTDATE,@ENDDATE)
	END

	SELECT DBO.ACCEPTSTARTENDDATE('2004-06-29',GETDATE())

--4. Create a scalar valued function which accepts two parameters year in integer & month in
--integer and returns total days in passed month & year.
	ALTER FUNCTION ACCEPTYEARMONTH(@YEAR INT,@MONTH INT)
	RETURNS INT
	AS
	BEGIN
		DECLARE @Y INT,
				@M INT,
				@D INT
		SET @Y=@YEAR*365
		SET @M=(@MONTH*365)/12
		SET @D=@Y+@M
		RETURN @D
	END

	SELECT DBO.ACCEPTYEARMONTH(1,6)
