--1. Create INSERT, UPDATE & DELETE Stored Procedures for Person table.
	--INSERT 
	CREATE PROC PR_PERSON_INSERT
		@PERSONID		INT,
		@PERSONNAME		VARCHAR(50),
		@SALARY			DECIMAL(8,2),
		@JOININGDATE	DATETIME,
		@CITY			VARCHAR(100),
		@AGE			INT,
		@BIRTHDATE		DATETIME
	AS
	BEGIN
	
		INSERT INTO PERSON VALUES
		(@PERSONID,@PERSONNAME,@SALARY,@JOININGDATE,@CITY,@AGE,@BIRTHDATE)
	
	END
	SELECT * FROM PERSON
	EXEC PR_PERSON_INSERT 108,'AXAY',10000,'2022-06-20','RAJKOT',19,'2003-06-30'

	--UPDATE
	ALTER PROC PR_PERSON_UPDATE
		@PERSONID	INT
	AS
	BEGIN
		UPDATE PERSON SET SALARY=30000 WHERE PERSONID=@PERSONID
	END

	EXEC PR_PERSON_UPDATE 108

	--DELETE
	CREATE PROC PR_PERSON_DELETE
		@PERSONID	INT
	AS
	BEGIN
		DELETE FROM PERSON WHERE PERSONID=@PERSONID
	END
	
	EXEC PR_PERSON_DELETE 108
--2. Create a trigger that fires on INSERT, UPDATE and DELETE operation on the Person table. For that,
--create a new table PersonLog to log (enter) all operations performed on the Person table.

--INSERT
CREATE TRIGGER TR_INSERT
ON PERSON
AFTER INSERT
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT @PERSONID=PERSONID,@PERSONNAME=PERSONNAME FROM INSERTED
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSERT',GETDATE())	
END 

INSERT INTO PERSON VALUES(101,'RUSHI','50000','2022-06-29','RAJKOT','19','2004-06-29')
INSERT INTO PERSON VALUES(102,'HIMANSHU','40000','2022-03-22','AHMEDABAD','18','2003-05-10')

SELECT * FROM PERSONLOG
SELECT * FROM PERSON

--UPDATE
CREATE TRIGGER TR_UPDATE
ON PERSON
AFTER UPDATE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT @PERSONID=PERSONID,@PERSONNAME=PERSONNAME FROM INSERTED
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'UPDATE',GETDATE())	
END

UPDATE PERSON SET CITY='AHMEDABAD' WHERE PERSONID=101

SELECT * FROM PERSONLOG

--DELETE
ALTER TRIGGER TR_DELETE
ON PERSON
AFTER DELETE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT @PERSONID=PERSONID,@PERSONNAME=PERSONNAME FROM DELETED
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'DELETE',GETDATE())	
END

DELETE FROM PERSON WHERE PERSONID=102

SELECT * FROM PERSON
INSERT INTO PERSON VALUES(102,'HIMANSHU',30000,'2022-02-27','RAJKOT',19,'2004-05-26')
SELECT * FROM PERSONLOG

--3. Create an INSTEAD OF trigger that fires on INSERT, UPDATE and DELETE operation on the Person
--table. For that, log all operation performed on the Person table into PersonLog.

--Insert

CREATE TRIGGER TR_INSTEADOF_INSERT
ON PERSON
INSTEAD OF INSERT
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT @PERSONID=PERSONID,@PERSONNAME=PERSONNAME FROM INSERTED
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSERT',GETDATE())	
END 

INSERT INTO PERSON VALUES(103,'RUSHI','50000','2022-06-29','RAJKOT','19','2004-06-29')
INSERT INTO PERSON VALUES(102,'HIMANSHU','40000','2022-03-22','AHMEDABAD','18','2003-05-10')
SELECT * FROM PERSON
SELECT * FROM PERSONLOG

DROP TRIGGER TR_INSTEADOF_INSERT

--Update

CREATE TRIGGER TR_INSTEADOF_UPDATE
ON PERSON
AFTER UPDATE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT @PERSONID=PERSONID,@PERSONNAME=PERSONNAME FROM INSERTED
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'UPDATE',GETDATE())	
END

UPDATE PERSON SET CITY='JAMANAGAR' WHERE PERSONID=101

SELECT * FROM PersonLog

DROP TRIGGER TR_INSTEADOF_UPDATE
--DELETE

CREATE TRIGGER TR_INSTEADOF_DELETE
ON PERSON
AFTER DELETE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT @PERSONID=PERSONID,@PERSONNAME=PERSONNAME FROM DELETED
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'DELETE',GETDATE())	
END

DELETE FROM PERSON WHERE PERSONID=101

SELECT * FROM PERSONLOG

DROP TRIGGER TR_INSTEADOF_DELETE

--4. Create DELETE trigger on PersonLog table, when we delete any record of PersonLog table it prints
--‘Record deleted successfully from PersonLog’.

CREATE TRIGGER TR_DELETE_MSG
ON PERSONLOG
AFTER DELETE
AS
BEGIN
	PRINT 'RECORD DELETED SUCCESSFULLY FROM PERSONLOG'
END

DELETE FROM PERSONLOG WHERE PLOGID=7

SELECT * FROM PERSONLOG
SELECT * FROM PERSON
--5. Create INSERT trigger on person table, which calculates the age and update that age in Person
--table.

ALTER TRIGGER TR_PERSON_CALCULATEAGE
ON PERSON
AFTER INSERT
AS
BEGIN
	DECLARE @AGE INT,@PERSONID INT

	SELECT @PERSONID=PERSONID FROM INSERTED
	SELECT @AGE=DATEDIFF(YEAR,BIRTHDATE,GETDATE()) FROM PERSON

	UPDATE PERSON SET AGE=@AGE WHERE PERSONID=@PERSONID
END

SELECT * FROM PERSON
SELECT * FROM PERSONLOG

INSERT INTO PERSON VALUES(103,'HIT',10000,'2022-01-01','RAJKOT',40,'1990-01-01')
DELETE FROM PERSON WHERE PERSONID=3
INSERT INTO PERSON VALUES(104,'KISHAN',20000,'2022-01-01','RAJKOT',50,'1995-01-01')
INSERT INTO PERSON VALUES(105,'RUSHI',50000,'2021-01-01','PUNE',30,'2004-06-29')
INSERT INTO PERSON VALUES(106,'KEVIN',40000,'2020-05-01','BANGLORE',50,'2001-01-01')
INSERT INTO PERSON VALUES(107,'NEVIL',60000,'2019-01-01','RAJKOT',35,'1985-01-01')


